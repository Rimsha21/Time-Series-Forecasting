# -*- coding: utf-8 -*-
"""Copy of Sales Time series ARIMA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vNU6cHL9Juhn-i7semWIWm4j3NNrscsb
"""

# Importing necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
import warnings
warnings.filterwarnings('ignore')

from google.colab import files

files = files.upload()

#Installing pmdarima package
get_ipython().system(' pip install pmdarima')

# Importing auto_arima 
from pmdarima.arima import auto_arima

import io

sales_data = pd.read_csv(io.BytesIO(files['Champagne Sales.csv']))

sales_data.head()

sales_data.tail()

#Convert the month column to datetime
sales_data['Month']=pd.to_datetime(sales_data['Month'])

#Set the index of the Month 
sales_data.set_index('Month',inplace=True)

# To understand the pattern
sales_data.plot()

#Testing for stationarity
from pmdarima.arima import ADFTest
adf_test = ADFTest(alpha = 0.05)
adf_test.should_diff(sales_data)

#Spliting the dataset into train and test
train = sales_data[:85]
test = sales_data[-20:]

plt.plot(train)
plt.plot(test)

arima_model =  auto_arima(train,start_p=0, d=1, start_q=0, 
                          max_p=5, max_d=5, max_q=5, start_P=0, 
                          D=1, start_Q=0, max_P=5, max_D=5,
                          max_Q=5, m=12, seasonal=True, 
                          error_action='warn',trace = True,
                          supress_warnings=True,stepwise = True,
                          random_state=20,n_fits = 50 )

#Summary of the model
arima_model.summary()

prediction = pd.DataFrame(arima_model.predict(n_periods = 20),index=test.index)
prediction.columns = ['predicted_sales']
prediction

plt.figure(figsize=(8,5))
plt.plot(train,label="Training")
plt.plot(test,label="Test")
plt.plot(prediction,label="Predicted")
plt.legend(loc = 'Left corner')
plt.show()

from sklearn.metrics import r2_score
test['predicted_sales'] = prediction
r2_score(test['Champagne sales'], test['predicted_sales'])

